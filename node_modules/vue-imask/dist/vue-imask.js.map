{"version":3,"file":"vue-imask.js","sources":["../src/props.ts","../src/composable.ts","../src/utils.ts","../src/component3-composition.ts","../src/component2.ts","../src/component.ts","../src/directive.ts"],"sourcesContent":["import { type PropType } from 'vue-demi';\nimport { type FactoryOpts, type MaskedDynamicOptions } from 'imask';\n\nexport default {\n  // common\n  mask: undefined as unknown as PropType<FactoryOpts['mask']>,\n  prepare: Function as PropType<FactoryOpts['prepare']>,\n  prepareChar: Function as PropType<FactoryOpts['prepareChar']>,\n  validate: Function as PropType<FactoryOpts['validate']>,\n  commit: Function as PropType<FactoryOpts['commit']>,\n  overwrite: {\n    type: Boolean,\n    required: false,\n    default: undefined,\n  },\n  eager: {\n    required: false,\n    default: undefined,\n    validator: (value: unknown) => ['append', 'remove'].includes(value as string) || typeof value === 'boolean',\n  },\n  skipInvalid: { type: Boolean, required: false, default: undefined },\n\n  // pattern\n  placeholderChar: String,\n  displayChar: String,\n  lazy: { type: Boolean, required: false, default: undefined },\n  definitions: Object,\n  blocks: Object,\n\n  // enum\n  enum: Array,\n\n  // range\n  maxLength: Number,\n  from: Number,\n  to: Number,\n\n  // date\n  pattern: String,\n  format: Function as PropType<FactoryOpts['format']>,\n  parse: Function as PropType<FactoryOpts['parse']>,\n  autofix: {\n    required: false,\n    default: undefined,\n    validator: (value: unknown) => value === 'pad' || typeof value === 'boolean',\n  },\n\n  // number\n  radix: String,\n  thousandsSeparator: String,\n  mapToRadix: Array,\n  scale: Number,\n  normalizeZeros: {\n    type: Boolean,\n    required: false,\n    default: undefined,\n  },\n  padFractionalZeros: {\n    type: Boolean,\n    required: false,\n    default: undefined,\n  },\n  min: [Number, Date],\n  max: [Number, Date],\n\n  // dynamic\n  dispatch: Function as PropType<MaskedDynamicOptions['dispatch']>\n};\n","import { ref, readonly, isRef, watch, onMounted, onUnmounted, type DeepReadonly, type Ref } from 'vue-demi';\nimport IMask, { type FactoryOpts, type InputMaskElement, type InputMask } from 'imask';\n\nexport\ntype ComposableEmitEventBase = 'accept' | 'complete';\n\nexport\ntype ComposableEmitEvent = ComposableEmitEventBase | `${ComposableEmitEventBase}:masked` | `${ComposableEmitEventBase}:typed` | `${ComposableEmitEventBase}:unmasked`;\n\nexport\ntype ComposableEmitValue<E extends ComposableEmitEvent, Opts extends FactoryOpts> =\n  E extends ComposableEmitEventBase | `${ComposableEmitEventBase}:masked` ? InputMask<Opts>['value'] :\n  E extends `${ComposableEmitEventBase}:unmasked` ? InputMask<Opts>['unmaskedValue'] :\n  E extends `${ComposableEmitEventBase}:typed` ? InputMask<Opts>['typedValue'] :\n  never\n;\n\nexport\ntype ComposableParams<Opts extends FactoryOpts> = {\n  emit?: <E extends ComposableEmitEvent>(eventName: E, value: ComposableEmitValue<E, Opts>, e?: InputEvent) => void,\n  onAccept?: (e?: InputEvent) => void,\n  onComplete?: (e?: InputEvent) => void,\n}\n\nexport default\nfunction useIMask<\n  MaskElement extends InputMaskElement,\n  Opts extends FactoryOpts\n> (props: Opts | Ref<Opts>, { emit, onAccept, onComplete }: ComposableParams<Opts>={}): {\n  el: Ref<MaskElement | undefined>,\n  mask: DeepReadonly<Ref<InputMask<Opts> | undefined>>,\n  masked: Ref<InputMask<Opts>['value']>,\n  unmasked: Ref<InputMask<Opts>['unmaskedValue']>,\n  typed: Ref<InputMask<Opts>['typedValue']>,\n} {\n  const _props = (isRef(props) ? props : ref(props)) as Ref<Opts>;\n  const el: Ref<MaskElement | undefined> = ref();\n  const mask: Ref<InputMask<Opts> | undefined> = ref();\n  const masked: Ref<InputMask<Opts>['value']> = ref('');\n  const unmasked: Ref<InputMask<Opts>['unmaskedValue']> = ref('');\n  const typed: Ref<InputMask<Opts>['typedValue']> = ref(null);\n  const initialized = ref(false);\n  let $el: MaskElement | undefined;\n  let $lastAcceptedValue: InputMask<Opts>['value'] | undefined;\n  let $lastAcceptedUnmaskedValue: InputMask<Opts>['unmaskedValue'] | undefined;\n  let $lastAcceptedTypedValue: InputMask<Opts>['typedValue'] | undefined;\n\n  function _onAccept (event?: InputEvent) {\n    $lastAcceptedTypedValue = typed.value = (mask.value as InputMask<Opts>).typedValue;\n    $lastAcceptedUnmaskedValue = unmasked.value = (mask.value as InputMask<Opts>).unmaskedValue;\n    $lastAcceptedValue = masked.value = (mask.value as InputMask<Opts>).value;\n\n    if (emit) {\n      emit('accept', masked.value, event);\n      emit('accept:masked', masked.value, event);\n      emit('accept:typed', typed.value, event);\n      emit('accept:unmasked', unmasked.value, event);\n    }\n    if (onAccept) onAccept(event);\n  }\n\n  function _onComplete (event?: InputEvent) {\n    if (emit) {\n      emit('complete', (mask.value as InputMask<Opts>).value, event);\n      emit('complete:masked', (mask.value as InputMask<Opts>).value, event);\n      emit('complete:typed', (mask.value as InputMask<Opts>).typedValue, event);\n      emit('complete:unmasked', (mask.value as InputMask<Opts>).unmaskedValue, event);\n    }\n    if (onComplete) onComplete(event);\n  }\n\n  function _initMask () {\n    $el = el.value;\n    const $props = _props.value;\n\n    if (!$el || !$props?.mask) return;\n\n    mask.value = IMask($el, $props)\n      .on('accept', _onAccept)\n      .on('complete', _onComplete);\n\n    _onAccept();\n\n    initialized.value = true;\n  }\n\n  function _destroyMask () {\n    if (!initialized.value) return;\n    mask.value?.destroy();\n    mask.value = undefined;\n  }\n\n  onMounted(_initMask);\n  onUnmounted(_destroyMask);\n\n  watch(unmasked, () => {\n    if (mask.value && initialized.value) {\n      if ($lastAcceptedUnmaskedValue !== unmasked.value) mask.value.unmaskedValue = unmasked.value;\n      $lastAcceptedUnmaskedValue = undefined;\n    }\n  });\n\n  watch(masked, () => {\n    if (mask.value && initialized.value) {\n      if ($lastAcceptedValue !== masked.value) mask.value.value = masked.value;\n      $lastAcceptedValue = undefined;\n    }\n  });\n\n  watch(typed, () => {\n    if (mask.value && initialized.value) {\n      if ($lastAcceptedTypedValue !== typed.value) mask.value.typedValue = typed.value;\n      $lastAcceptedTypedValue = undefined;\n    }\n  });\n\n  watch([el, _props], () => {\n    const $newEl = el.value;\n    const $props = _props.value;\n\n    if (!$props?.mask || $newEl !== $el) _destroyMask();\n    if ($newEl) {\n      if (!mask.value) {\n        _initMask();\n      } else {\n        mask.value.updateOptions($props as any);\n      }\n    }\n  });\n\n  return {\n    el,\n    mask: readonly(mask),\n    masked,\n    unmasked,\n    typed,\n  };\n}\n","export\nfunction extractOptionsFromProps<\n  Props extends Record<string, any>,\n  ExcludeProps extends keyof Props\n> (props: Props, exclude: Readonly<ExcludeProps[]>): Omit<Props, ExcludeProps> {\n  props = {...props};\n\n  // keep only defined props\n  (Object.keys(props) as Array<ExcludeProps>)\n    .forEach(prop => {\n      if (props[prop] === undefined || exclude.includes(prop)) delete props[prop];\n    });\n\n  return props;\n}\n","import { type FactoryOpts } from 'imask';\nimport { h, watch, toRef, defineComponent, PropType } from 'vue-demi';\nimport props from './props';\nimport useIMask, { type ComposableParams } from './composable';\nimport { extractOptionsFromProps } from './utils';\n\n\nexport\ntype MaskProps = FactoryOpts & {\n  modelValue: string,\n  value: string,\n  unmasked: string,\n  typed: any,\n}\n\n// order does matter = priority\nconst VALUE_PROPS = ['typed', 'unmasked', 'value', 'modelValue'] as const; \n\n\nexport default defineComponent<MaskProps>({\n  name: 'imask-input',\n  inheritAttrs: false,\n\n  props: {\n    // plugin\n    modelValue: String,\n    value: String,\n    unmasked: String,\n    typed: Object as PropType<any>,\n\n    ...props,\n  },\n\n  emits: [\n    'update:modelValue',\n    'update:masked',\n    'update:value',\n    'update:unmasked',\n    'update:typed',\n    'accept',\n    'accept:value',\n    'accept:masked',\n    'accept:unmasked',\n    'accept:typed',\n    'complete',\n    'complete:value',\n    'complete:masked',\n    'complete:unmasked',\n    'complete:typed',\n  ],\n\n  setup (props, { attrs, emit }) {\n    const { el, masked, unmasked, typed } = useIMask(extractOptionsFromProps(props as MaskProps, VALUE_PROPS) as FactoryOpts, {\n      emit,\n      onAccept: (event?: InputEvent) => {\n        // emit more events\n        const v = masked.value;\n        emit('accept:value', v, event);\n        emit('update:value', v, event);\n        emit('update:masked', v, event);\n        emit('update:modelValue', v, event);\n\n        emit('update:unmasked', unmasked.value, event);\n        emit('update:typed', typed.value, event);\n      },\n      onComplete: (event?: InputEvent) => {\n        emit('complete:value', masked.value, event);\n      },\n    } as ComposableParams<MaskProps>);\n\n    const pvalue = toRef(props, 'value');\n    const pmodelValue = toRef(props, 'modelValue');\n    const punmasked = toRef(props, 'unmasked');\n    const ptyped = toRef(props, 'typed');\n\n    masked.value = pmodelValue.value || pvalue.value || '';\n    unmasked.value = punmasked.value;\n    typed.value = ptyped.value;\n\n    watch(pvalue, v => masked.value = v);\n    watch(pmodelValue, v => masked.value = v);\n    watch(punmasked, v => unmasked.value = v);\n    watch(ptyped, v => typed.value = v);\n\n    return () => {\n      // TODO type?\n      const data: Record<string, any> = {\n        ...attrs,\n        value: props.value != null ? props.value : props.modelValue,\n        ref: el,\n      };\n\n      if (!props.mask) {\n        data.onInput = (event: InputEvent) => {\n          emit('update:modelValue', (event.target as HTMLInputElement).value);\n          emit('update:value', (event.target as HTMLInputElement).value);\n        }\n      }\n\n      return h('input', data);\n    };\n  },\n});\n","import { Vue2, type VNode } from 'vue-demi';\nimport IMask, { type InputMask, type FactoryOpts } from 'imask';\nimport props from './props';\nimport { extractOptionsFromProps } from './utils';\n\n\nexport default Vue2?.extend({\n  name: 'imask-input',\n\n  data () {\n    return {} as { maskRef?: InputMask<FactoryOpts> };\n  },\n\n  render (createElement): VNode {\n    const data = {\n      domProps: {\n        value: this.maskRef ? this.maskRef.value : this.value\n      },\n      on: {...this.$listeners},\n    };\n\n    // if there is no mask use default input event\n    if (!this.$props.mask) {\n      data.on.input = (event: InputEvent) => this.$emit('input', (event.target as HTMLInputElement).value);\n    } else {\n      delete data.on.input;\n    }\n\n    return createElement('input', data);\n  },\n\n  mounted () {\n    if (!this.$props.mask) return;\n\n    this._initMask();\n  },\n\n  destroyed () {\n    this._destroyMask();\n  },\n\n  computed: {\n    maskOptions (): FactoryOpts {\n      return extractOptionsFromProps(this.$props, ['value', 'unmask']) as FactoryOpts;\n    },\n  },\n\n  watch: {\n    '$props': {\n      handler (props) {\n        const maskOptions = this.maskOptions;\n        if (maskOptions.mask) {\n          if (this.maskRef) {\n            this.maskRef.updateOptions(maskOptions);\n            if ('value' in props) this._updateValue();\n          } else {\n            this._initMask(maskOptions);\n            if (props.value !== this._maskValue()) this._onAccept();\n          }\n        } else {\n          this._destroyMask();\n          if ('value' in props) (this.$el as HTMLInputElement).value = props.value;\n        }\n      },\n      deep: true\n    }\n  },\n\n  methods: {\n    _maskValue (): any {\n      if (this.unmask === 'typed') return this.maskRef?.typedValue;\n      if (this.unmask) return this.maskRef?.unmaskedValue;\n      return this.maskRef?.value;\n    },\n\n    _updateValue (): void {\n      if (!this.maskRef) return;\n\n      const value = this.value == null && this.unmask !== 'typed' ? '' : this.value;\n      if (this.unmask === 'typed') this.maskRef.typedValue = value;\n      else if (this.unmask) this.maskRef.unmaskedValue = value as string;\n      else this.maskRef.value = value as string;\n    },\n\n    _onAccept (): void {\n      const val = this._maskValue();\n      this.$emit('input', val);\n      this.$emit('accept', val);\n    },\n\n    _onComplete (): void {\n      this.$emit('complete', this._maskValue());\n    },\n\n    _initMask (maskOptions?: FactoryOpts): void {\n      if (!maskOptions) maskOptions = this.maskOptions;\n\n      this.maskRef = IMask((this.$el as HTMLInputElement), maskOptions)\n        .on('accept', this._onAccept.bind(this))\n        .on('complete', this._onComplete.bind(this));\n      this._updateValue();\n    },\n\n    _destroyMask (): void {\n      if (this.maskRef) {\n        this.maskRef.destroy();\n        delete this.maskRef;\n      }\n    }\n  },\n\n  props: {\n    value: {},\n    unmask: {\n      validator: (value) => value === 'typed' || typeof value === 'boolean',\n    },\n    ...props,\n  },\n});\n","import { isVue3 } from 'vue-demi';\n\nimport Component3 from './component3-composition';\nimport Component2 from './component2';\n\n\nexport default isVue3 ? Component3 : Component2;\n","import IMask, { type InputElement, type InputMask, type FactoryArg, type UpdateOpts } from 'imask';\nimport { isVue3 } from 'vue-demi';\n\n\ntype DirectiveMaskElement<Opts extends FactoryArg> = InputElement & { maskRef?: InputMask<Opts> }\n\nexport default {\n  name: 'imask',\n\n  [isVue3 ? 'beforeMount' : 'bind']: <Opts extends FactoryArg>(el: DirectiveMaskElement<Opts>, { value: options }: { value: Opts }) => {\n    if (!options) return;\n\n    initMask(el, options);\n  },\n\n  [isVue3 ? 'updated' : 'update']: <Opts extends FactoryArg>(el: DirectiveMaskElement<Opts>, { value: options }: { value: Opts | UpdateOpts<Opts> }) => {\n    if (options) {\n      if (el.maskRef) {\n        el.maskRef.updateOptions(options as UpdateOpts<Opts>);\n        if (el.value !== el.maskRef.value) el.maskRef._onChange();\n      }\n      else initMask(el, options as Opts);\n    } else {\n      destroyMask(el);\n    }\n  },\n\n  [isVue3 ? 'unmounted' : 'unbind']: <Opts extends FactoryArg>(el: DirectiveMaskElement<Opts>) => {\n    destroyMask(el);\n  }\n};\n\nfunction fireEvent<Opts extends FactoryArg> (el: DirectiveMaskElement<Opts>, eventName: string, data: InputMask<Opts>) {\n  const e = document.createEvent('CustomEvent');\n  e.initCustomEvent(eventName, true, true, data);\n  el.dispatchEvent(e);\n}\n\nfunction initMask<Opts extends FactoryArg> (el: DirectiveMaskElement<Opts>, opts: Opts) {\n  el.maskRef = IMask(el, opts)\n    .on('accept', () => fireEvent(el, 'accept', el.maskRef as InputMask<Opts>))\n    .on('complete', () => fireEvent(el, 'complete', el.maskRef as InputMask<Opts>));\n}\n\nfunction destroyMask <Opts extends FactoryArg>(el: DirectiveMaskElement<Opts>) {\n  if (el.maskRef) {\n    el.maskRef.destroy();\n    delete el.maskRef;\n  }\n}\n"],"names":["mask","undefined","prepare","Function","prepareChar","validate","commit","overwrite","type","Boolean","required","default","eager","validator","value","includes","skipInvalid","placeholderChar","String","displayChar","lazy","definitions","Object","blocks","enum","Array","maxLength","Number","from","to","pattern","format","parse","autofix","radix","thousandsSeparator","mapToRadix","scale","normalizeZeros","padFractionalZeros","min","Date","max","dispatch","useIMask","props","_temp","emit","onAccept","onComplete","_props","isRef","ref","el","masked","unmasked","typed","initialized","$el","$lastAcceptedValue","$lastAcceptedUnmaskedValue","$lastAcceptedTypedValue","_onAccept","event","typedValue","unmaskedValue","_onComplete","_initMask","$props","IMask","on","_destroyMask","_mask$value","destroy","onMounted","onUnmounted","watch","$newEl","updateOptions","readonly","extractOptionsFromProps","exclude","keys","forEach","prop","VALUE_PROPS","defineComponent","name","inheritAttrs","modelValue","emits","setup","_ref","attrs","v","pvalue","toRef","pmodelValue","punmasked","ptyped","data","onInput","target","h","Vue2","extend","render","createElement","domProps","maskRef","$listeners","input","$emit","mounted","destroyed","computed","maskOptions","handler","_updateValue","_maskValue","deep","methods","_this$maskRef","_this$maskRef2","_this$maskRef3","unmask","val","bind","isVue3","Component3","Component2","options","initMask","_ref2","_onChange","destroyMask","fireEvent","eventName","e","document","createEvent","initCustomEvent","dispatchEvent","opts"],"mappings":";;;;;;;;;;AAGA,cAAe;EACb;EACAA,EAAAA,IAAI,EAAEC,SAAqD;EAC3DC,EAAAA,OAAO,EAAEC,QAA4C;EACrDC,EAAAA,WAAW,EAAED,QAAgD;EAC7DE,EAAAA,QAAQ,EAAEF,QAA6C;EACvDG,EAAAA,MAAM,EAAEH,QAA2C;EACnDI,EAAAA,SAAS,EAAE;EACTC,IAAAA,IAAI,EAAEC,OAAO;EACbC,IAAAA,QAAQ,EAAE,KAAK;EACfC,IAAAA,OAAO,EAAEV,SAAAA;KACV;EACDW,EAAAA,KAAK,EAAE;EACLF,IAAAA,QAAQ,EAAE,KAAK;EACfC,IAAAA,OAAO,EAAEV,SAAS;EAClBY,IAAAA,SAAS,EAAGC,KAAc,IAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACD,KAAe,CAAC,IAAI,OAAOA,KAAK,KAAK,SAAA;KACnG;EACDE,EAAAA,WAAW,EAAE;EAAER,IAAAA,IAAI,EAAEC,OAAO;EAAEC,IAAAA,QAAQ,EAAE,KAAK;EAAEC,IAAAA,OAAO,EAAEV,SAAAA;KAAW;EAEnE;EACAgB,EAAAA,eAAe,EAAEC,MAAM;EACvBC,EAAAA,WAAW,EAAED,MAAM;EACnBE,EAAAA,IAAI,EAAE;EAAEZ,IAAAA,IAAI,EAAEC,OAAO;EAAEC,IAAAA,QAAQ,EAAE,KAAK;EAAEC,IAAAA,OAAO,EAAEV,SAAAA;KAAW;EAC5DoB,EAAAA,WAAW,EAAEC,MAAM;EACnBC,EAAAA,MAAM,EAAED,MAAM;EAEd;EACAE,EAAAA,IAAI,EAAEC,KAAK;EAEX;EACAC,EAAAA,SAAS,EAAEC,MAAM;EACjBC,EAAAA,IAAI,EAAED,MAAM;EACZE,EAAAA,EAAE,EAAEF,MAAM;EAEV;EACAG,EAAAA,OAAO,EAAEZ,MAAM;EACfa,EAAAA,MAAM,EAAE5B,QAA2C;EACnD6B,EAAAA,KAAK,EAAE7B,QAA0C;EACjD8B,EAAAA,OAAO,EAAE;EACPvB,IAAAA,QAAQ,EAAE,KAAK;EACfC,IAAAA,OAAO,EAAEV,SAAS;MAClBY,SAAS,EAAGC,KAAc,IAAKA,KAAK,KAAK,KAAK,IAAI,OAAOA,KAAK,KAAK,SAAA;KACpE;EAED;EACAoB,EAAAA,KAAK,EAAEhB,MAAM;EACbiB,EAAAA,kBAAkB,EAAEjB,MAAM;EAC1BkB,EAAAA,UAAU,EAAEX,KAAK;EACjBY,EAAAA,KAAK,EAAEV,MAAM;EACbW,EAAAA,cAAc,EAAE;EACd9B,IAAAA,IAAI,EAAEC,OAAO;EACbC,IAAAA,QAAQ,EAAE,KAAK;EACfC,IAAAA,OAAO,EAAEV,SAAAA;KACV;EACDsC,EAAAA,kBAAkB,EAAE;EAClB/B,IAAAA,IAAI,EAAEC,OAAO;EACbC,IAAAA,QAAQ,EAAE,KAAK;EACfC,IAAAA,OAAO,EAAEV,SAAAA;KACV;EACDuC,EAAAA,GAAG,EAAE,CAACb,MAAM,EAAEc,IAAI,CAAC;EACnBC,EAAAA,GAAG,EAAE,CAACf,MAAM,EAAEc,IAAI,CAAC;EAEnB;EACAE,EAAAA,QAAQ,EAAExC,QAAAA;EACZ,CAAC;;EC1CD,SAASyC,QAAQA,CAGdC,KAAuB,EAAAC,KAAA,EAMxB;IAAA,IAN0B;MAAEC,IAAI;MAAEC,QAAQ;EAAEC,IAAAA,UAAAA;EAAmC,GAAC,GAAAH,KAAA,KAAA,KAAA,CAAA,GAAC,EAAE,GAAAA,KAAA,CAAA;EAOnF,EAAA,MAAMI,MAAM,GAAIC,aAAK,CAACN,KAAK,CAAC,GAAGA,KAAK,GAAGO,WAAG,CAACP,KAAK,CAAe,CAAA;EAC/D,EAAA,MAAMQ,EAAgC,GAAGD,WAAG,EAAE,CAAA;EAC9C,EAAA,MAAMpD,IAAsC,GAAGoD,WAAG,EAAE,CAAA;EACpD,EAAA,MAAME,MAAqC,GAAGF,WAAG,CAAC,EAAE,CAAC,CAAA;EACrD,EAAA,MAAMG,QAA+C,GAAGH,WAAG,CAAC,EAAE,CAAC,CAAA;EAC/D,EAAA,MAAMI,KAAyC,GAAGJ,WAAG,CAAC,IAAI,CAAC,CAAA;EAC3D,EAAA,MAAMK,WAAW,GAAGL,WAAG,CAAC,KAAK,CAAC,CAAA;EAC9B,EAAA,IAAIM,GAA4B,CAAA;EAChC,EAAA,IAAIC,kBAAwD,CAAA;EAC5D,EAAA,IAAIC,0BAAwE,CAAA;EAC5E,EAAA,IAAIC,uBAAkE,CAAA;IAEtE,SAASC,SAASA,CAAEC,KAAkB,EAAE;MACtCF,uBAAuB,GAAGL,KAAK,CAAC1C,KAAK,GAAId,IAAI,CAACc,KAAK,CAAqBkD,UAAU,CAAA;MAClFJ,0BAA0B,GAAGL,QAAQ,CAACzC,KAAK,GAAId,IAAI,CAACc,KAAK,CAAqBmD,aAAa,CAAA;MAC3FN,kBAAkB,GAAGL,MAAM,CAACxC,KAAK,GAAId,IAAI,CAACc,KAAK,CAAqBA,KAAK,CAAA;EAEzE,IAAA,IAAIiC,IAAI,EAAE;QACRA,IAAI,CAAC,QAAQ,EAAEO,MAAM,CAACxC,KAAK,EAAEiD,KAAK,CAAC,CAAA;QACnChB,IAAI,CAAC,eAAe,EAAEO,MAAM,CAACxC,KAAK,EAAEiD,KAAK,CAAC,CAAA;QAC1ChB,IAAI,CAAC,cAAc,EAAES,KAAK,CAAC1C,KAAK,EAAEiD,KAAK,CAAC,CAAA;QACxChB,IAAI,CAAC,iBAAiB,EAAEQ,QAAQ,CAACzC,KAAK,EAAEiD,KAAK,CAAC,CAAA;EAChD,KAAA;EACA,IAAA,IAAIf,QAAQ,EAAEA,QAAQ,CAACe,KAAK,CAAC,CAAA;EAC/B,GAAA;IAEA,SAASG,WAAWA,CAAEH,KAAkB,EAAE;EACxC,IAAA,IAAIhB,IAAI,EAAE;QACRA,IAAI,CAAC,UAAU,EAAG/C,IAAI,CAACc,KAAK,CAAqBA,KAAK,EAAEiD,KAAK,CAAC,CAAA;QAC9DhB,IAAI,CAAC,iBAAiB,EAAG/C,IAAI,CAACc,KAAK,CAAqBA,KAAK,EAAEiD,KAAK,CAAC,CAAA;QACrEhB,IAAI,CAAC,gBAAgB,EAAG/C,IAAI,CAACc,KAAK,CAAqBkD,UAAU,EAAED,KAAK,CAAC,CAAA;QACzEhB,IAAI,CAAC,mBAAmB,EAAG/C,IAAI,CAACc,KAAK,CAAqBmD,aAAa,EAAEF,KAAK,CAAC,CAAA;EACjF,KAAA;EACA,IAAA,IAAId,UAAU,EAAEA,UAAU,CAACc,KAAK,CAAC,CAAA;EACnC,GAAA;IAEA,SAASI,SAASA,GAAI;MACpBT,GAAG,GAAGL,EAAE,CAACvC,KAAK,CAAA;EACd,IAAA,MAAMsD,MAAM,GAAGlB,MAAM,CAACpC,KAAK,CAAA;MAE3B,IAAI,CAAC4C,GAAG,IAAI,EAACU,MAAM,IAANA,IAAAA,IAAAA,MAAM,CAAEpE,IAAI,CAAE,EAAA,OAAA;MAE3BA,IAAI,CAACc,KAAK,GAAGuD,sBAAK,CAACX,GAAG,EAAEU,MAAM,CAAC,CAC5BE,EAAE,CAAC,QAAQ,EAAER,SAAS,CAAC,CACvBQ,EAAE,CAAC,UAAU,EAAEJ,WAAW,CAAC,CAAA;EAE9BJ,IAAAA,SAAS,EAAE,CAAA;MAEXL,WAAW,CAAC3C,KAAK,GAAG,IAAI,CAAA;EAC1B,GAAA;IAEA,SAASyD,YAAYA,GAAI;EAAA,IAAA,IAAAC,WAAA,CAAA;EACvB,IAAA,IAAI,CAACf,WAAW,CAAC3C,KAAK,EAAE,OAAA;MACxB,CAAA0D,WAAA,GAAAxE,IAAI,CAACc,KAAK,aAAV0D,WAAA,CAAYC,OAAO,EAAE,CAAA;MACrBzE,IAAI,CAACc,KAAK,GAAGb,SAAS,CAAA;EACxB,GAAA;IAEAyE,iBAAS,CAACP,SAAS,CAAC,CAAA;IACpBQ,mBAAW,CAACJ,YAAY,CAAC,CAAA;IAEzBK,aAAK,CAACrB,QAAQ,EAAE,MAAM;EACpB,IAAA,IAAIvD,IAAI,CAACc,KAAK,IAAI2C,WAAW,CAAC3C,KAAK,EAAE;EACnC,MAAA,IAAI8C,0BAA0B,KAAKL,QAAQ,CAACzC,KAAK,EAAEd,IAAI,CAACc,KAAK,CAACmD,aAAa,GAAGV,QAAQ,CAACzC,KAAK,CAAA;EAC5F8C,MAAAA,0BAA0B,GAAG3D,SAAS,CAAA;EACxC,KAAA;EACF,GAAC,CAAC,CAAA;IAEF2E,aAAK,CAACtB,MAAM,EAAE,MAAM;EAClB,IAAA,IAAItD,IAAI,CAACc,KAAK,IAAI2C,WAAW,CAAC3C,KAAK,EAAE;EACnC,MAAA,IAAI6C,kBAAkB,KAAKL,MAAM,CAACxC,KAAK,EAAEd,IAAI,CAACc,KAAK,CAACA,KAAK,GAAGwC,MAAM,CAACxC,KAAK,CAAA;EACxE6C,MAAAA,kBAAkB,GAAG1D,SAAS,CAAA;EAChC,KAAA;EACF,GAAC,CAAC,CAAA;IAEF2E,aAAK,CAACpB,KAAK,EAAE,MAAM;EACjB,IAAA,IAAIxD,IAAI,CAACc,KAAK,IAAI2C,WAAW,CAAC3C,KAAK,EAAE;EACnC,MAAA,IAAI+C,uBAAuB,KAAKL,KAAK,CAAC1C,KAAK,EAAEd,IAAI,CAACc,KAAK,CAACkD,UAAU,GAAGR,KAAK,CAAC1C,KAAK,CAAA;EAChF+C,MAAAA,uBAAuB,GAAG5D,SAAS,CAAA;EACrC,KAAA;EACF,GAAC,CAAC,CAAA;EAEF2E,EAAAA,aAAK,CAAC,CAACvB,EAAE,EAAEH,MAAM,CAAC,EAAE,MAAM;EACxB,IAAA,MAAM2B,MAAM,GAAGxB,EAAE,CAACvC,KAAK,CAAA;EACvB,IAAA,MAAMsD,MAAM,GAAGlB,MAAM,CAACpC,KAAK,CAAA;EAE3B,IAAA,IAAI,EAACsD,MAAM,IAANA,IAAAA,IAAAA,MAAM,CAAEpE,IAAI,CAAI6E,IAAAA,MAAM,KAAKnB,GAAG,EAAEa,YAAY,EAAE,CAAA;EACnD,IAAA,IAAIM,MAAM,EAAE;EACV,MAAA,IAAI,CAAC7E,IAAI,CAACc,KAAK,EAAE;EACfqD,QAAAA,SAAS,EAAE,CAAA;EACb,OAAC,MAAM;EACLnE,QAAAA,IAAI,CAACc,KAAK,CAACgE,aAAa,CAACV,MAAa,CAAC,CAAA;EACzC,OAAA;EACF,KAAA;EACF,GAAC,CAAC,CAAA;IAEF,OAAO;MACLf,EAAE;EACFrD,IAAAA,IAAI,EAAE+E,gBAAQ,CAAC/E,IAAI,CAAC;MACpBsD,MAAM;MACNC,QAAQ;EACRC,IAAAA,KAAAA;KACD,CAAA;EACH;;ECxIA,SAASwB,uBAAuBA,CAG7BnC,KAAY,EAAEoC,OAAiC,EAA6B;EAC7EpC,EAAAA,KAAK,GAAG;MAAC,GAAGA,KAAAA;KAAM,CAAA;;EAElB;IACCvB,MAAM,CAAC4D,IAAI,CAACrC,KAAK,CAAC,CAChBsC,OAAO,CAACC,IAAI,IAAI;EACf,IAAA,IAAIvC,KAAK,CAACuC,IAAI,CAAC,KAAKnF,SAAS,IAAIgF,OAAO,CAAClE,QAAQ,CAACqE,IAAI,CAAC,EAAE,OAAOvC,KAAK,CAACuC,IAAI,CAAC,CAAA;EAC7E,GAAC,CAAC,CAAA;EAEJ,EAAA,OAAOvC,KAAK,CAAA;EACd;;ECCA;EACA,MAAMwC,WAAW,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,CAAU,CAAA;AAGzE,mBAAeC,uBAAe,CAAY;EACxCC,EAAAA,IAAI,EAAE,aAAa;EACnBC,EAAAA,YAAY,EAAE,KAAK;EAEnB3C,EAAAA,KAAK,EAAE;EACL;EACA4C,IAAAA,UAAU,EAAEvE,MAAM;EAClBJ,IAAAA,KAAK,EAAEI,MAAM;EACbqC,IAAAA,QAAQ,EAAErC,MAAM;EAChBsC,IAAAA,KAAK,EAAElC,MAAuB;MAE9B,GAAGuB,KAAAA;KACJ;EAED6C,EAAAA,KAAK,EAAE,CACL,mBAAmB,EACnB,eAAe,EACf,cAAc,EACd,iBAAiB,EACjB,cAAc,EACd,QAAQ,EACR,cAAc,EACd,eAAe,EACf,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,gBAAgB,EAChB,iBAAiB,EACjB,mBAAmB,EACnB,gBAAgB,CACjB;EAEDC,EAAAA,KAAKA,CAAE9C,KAAK,EAAA+C,IAAA,EAAmB;MAAA,IAAjB;QAAEC,KAAK;EAAE9C,MAAAA,IAAAA;EAAK,KAAC,GAAA6C,IAAA,CAAA;MAC3B,MAAM;QAAEvC,EAAE;QAAEC,MAAM;QAAEC,QAAQ;EAAEC,MAAAA,KAAAA;OAAO,GAAGZ,QAAQ,CAACoC,uBAAuB,CAACnC,KAAK,EAAewC,WAAW,CAAC,EAAiB;QACxHtC,IAAI;QACJC,QAAQ,EAAGe,KAAkB,IAAK;EAChC;EACA,QAAA,MAAM+B,CAAC,GAAGxC,MAAM,CAACxC,KAAK,CAAA;EACtBiC,QAAAA,IAAI,CAAC,cAAc,EAAE+C,CAAC,EAAE/B,KAAK,CAAC,CAAA;EAC9BhB,QAAAA,IAAI,CAAC,cAAc,EAAE+C,CAAC,EAAE/B,KAAK,CAAC,CAAA;EAC9BhB,QAAAA,IAAI,CAAC,eAAe,EAAE+C,CAAC,EAAE/B,KAAK,CAAC,CAAA;EAC/BhB,QAAAA,IAAI,CAAC,mBAAmB,EAAE+C,CAAC,EAAE/B,KAAK,CAAC,CAAA;UAEnChB,IAAI,CAAC,iBAAiB,EAAEQ,QAAQ,CAACzC,KAAK,EAAEiD,KAAK,CAAC,CAAA;UAC9ChB,IAAI,CAAC,cAAc,EAAES,KAAK,CAAC1C,KAAK,EAAEiD,KAAK,CAAC,CAAA;SACzC;QACDd,UAAU,EAAGc,KAAkB,IAAK;UAClChB,IAAI,CAAC,gBAAgB,EAAEO,MAAM,CAACxC,KAAK,EAAEiD,KAAK,CAAC,CAAA;EAC7C,OAAA;EACF,KAAgC,CAAC,CAAA;EAEjC,IAAA,MAAMgC,MAAM,GAAGC,aAAK,CAACnD,KAAK,EAAE,OAAO,CAAC,CAAA;EACpC,IAAA,MAAMoD,WAAW,GAAGD,aAAK,CAACnD,KAAK,EAAE,YAAY,CAAC,CAAA;EAC9C,IAAA,MAAMqD,SAAS,GAAGF,aAAK,CAACnD,KAAK,EAAE,UAAU,CAAC,CAAA;EAC1C,IAAA,MAAMsD,MAAM,GAAGH,aAAK,CAACnD,KAAK,EAAE,OAAO,CAAC,CAAA;MAEpCS,MAAM,CAACxC,KAAK,GAAGmF,WAAW,CAACnF,KAAK,IAAIiF,MAAM,CAACjF,KAAK,IAAI,EAAE,CAAA;EACtDyC,IAAAA,QAAQ,CAACzC,KAAK,GAAGoF,SAAS,CAACpF,KAAK,CAAA;EAChC0C,IAAAA,KAAK,CAAC1C,KAAK,GAAGqF,MAAM,CAACrF,KAAK,CAAA;MAE1B8D,aAAK,CAACmB,MAAM,EAAED,CAAC,IAAIxC,MAAM,CAACxC,KAAK,GAAGgF,CAAC,CAAC,CAAA;MACpClB,aAAK,CAACqB,WAAW,EAAEH,CAAC,IAAIxC,MAAM,CAACxC,KAAK,GAAGgF,CAAC,CAAC,CAAA;MACzClB,aAAK,CAACsB,SAAS,EAAEJ,CAAC,IAAIvC,QAAQ,CAACzC,KAAK,GAAGgF,CAAC,CAAC,CAAA;MACzClB,aAAK,CAACuB,MAAM,EAAEL,CAAC,IAAItC,KAAK,CAAC1C,KAAK,GAAGgF,CAAC,CAAC,CAAA;EAEnC,IAAA,OAAO,MAAM;EACX;EACA,MAAA,MAAMM,IAAyB,GAAG;EAChC,QAAA,GAAGP,KAAK;EACR/E,QAAAA,KAAK,EAAE+B,KAAK,CAAC/B,KAAK,IAAI,IAAI,GAAG+B,KAAK,CAAC/B,KAAK,GAAG+B,KAAK,CAAC4C,UAAU;EAC3DrC,QAAAA,GAAG,EAAEC,EAAAA;SACN,CAAA;EAED,MAAA,IAAI,CAACR,KAAK,CAAC7C,IAAI,EAAE;EACfoG,QAAAA,IAAI,CAACC,OAAO,GAAItC,KAAiB,IAAK;YACpChB,IAAI,CAAC,mBAAmB,EAAGgB,KAAK,CAACuC,MAAM,CAAsBxF,KAAK,CAAC,CAAA;YACnEiC,IAAI,CAAC,cAAc,EAAGgB,KAAK,CAACuC,MAAM,CAAsBxF,KAAK,CAAC,CAAA;WAC/D,CAAA;EACH,OAAA;EAEA,MAAA,OAAOyF,SAAC,CAAC,OAAO,EAAEH,IAAI,CAAC,CAAA;OACxB,CAAA;EACH,GAAA;EACF,CAAC,CAAC;;AChGF,mBAAeI,YAAI,IAAA,IAAA,GAAA,KAAA,CAAA,GAAJA,YAAI,CAAEC,MAAM,CAAC;EAC1BlB,EAAAA,IAAI,EAAE,aAAa;EAEnBa,EAAAA,IAAIA,GAAI;EACN,IAAA,OAAO,EAAE,CAAA;KACV;IAEDM,MAAMA,CAAEC,aAAa,EAAS;EAC5B,IAAA,MAAMP,IAAI,GAAG;EACXQ,MAAAA,QAAQ,EAAE;EACR9F,QAAAA,KAAK,EAAE,IAAI,CAAC+F,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC/F,KAAK,GAAG,IAAI,CAACA,KAAAA;SACjD;EACDwD,MAAAA,EAAE,EAAE;EAAC,QAAA,GAAG,IAAI,CAACwC,UAAAA;EAAU,OAAA;OACxB,CAAA;;EAED;EACA,IAAA,IAAI,CAAC,IAAI,CAAC1C,MAAM,CAACpE,IAAI,EAAE;EACrBoG,MAAAA,IAAI,CAAC9B,EAAE,CAACyC,KAAK,GAAIhD,KAAiB,IAAK,IAAI,CAACiD,KAAK,CAAC,OAAO,EAAGjD,KAAK,CAACuC,MAAM,CAAsBxF,KAAK,CAAC,CAAA;EACtG,KAAC,MAAM;EACL,MAAA,OAAOsF,IAAI,CAAC9B,EAAE,CAACyC,KAAK,CAAA;EACtB,KAAA;EAEA,IAAA,OAAOJ,aAAa,CAAC,OAAO,EAAEP,IAAI,CAAC,CAAA;KACpC;EAEDa,EAAAA,OAAOA,GAAI;EACT,IAAA,IAAI,CAAC,IAAI,CAAC7C,MAAM,CAACpE,IAAI,EAAE,OAAA;MAEvB,IAAI,CAACmE,SAAS,EAAE,CAAA;KACjB;EAED+C,EAAAA,SAASA,GAAI;MACX,IAAI,CAAC3C,YAAY,EAAE,CAAA;KACpB;EAED4C,EAAAA,QAAQ,EAAE;EACRC,IAAAA,WAAWA,GAAiB;QAC1B,OAAOpC,uBAAuB,CAAC,IAAI,CAACZ,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAA;EAClE,KAAA;KACD;EAEDQ,EAAAA,KAAK,EAAE;EACL,IAAA,QAAQ,EAAE;QACRyC,OAAOA,CAAExE,KAAK,EAAE;EACd,QAAA,MAAMuE,WAAW,GAAG,IAAI,CAACA,WAAW,CAAA;UACpC,IAAIA,WAAW,CAACpH,IAAI,EAAE;YACpB,IAAI,IAAI,CAAC6G,OAAO,EAAE;EAChB,YAAA,IAAI,CAACA,OAAO,CAAC/B,aAAa,CAACsC,WAAW,CAAC,CAAA;cACvC,IAAI,OAAO,IAAIvE,KAAK,EAAE,IAAI,CAACyE,YAAY,EAAE,CAAA;EAC3C,WAAC,MAAM;EACL,YAAA,IAAI,CAACnD,SAAS,CAACiD,WAAW,CAAC,CAAA;EAC3B,YAAA,IAAIvE,KAAK,CAAC/B,KAAK,KAAK,IAAI,CAACyG,UAAU,EAAE,EAAE,IAAI,CAACzD,SAAS,EAAE,CAAA;EACzD,WAAA;EACF,SAAC,MAAM;YACL,IAAI,CAACS,YAAY,EAAE,CAAA;EACnB,UAAA,IAAI,OAAO,IAAI1B,KAAK,EAAG,IAAI,CAACa,GAAG,CAAsB5C,KAAK,GAAG+B,KAAK,CAAC/B,KAAK,CAAA;EAC1E,SAAA;SACD;EACD0G,MAAAA,IAAI,EAAE,IAAA;EACR,KAAA;KACD;EAEDC,EAAAA,OAAO,EAAE;EACPF,IAAAA,UAAUA,GAAS;EAAA,MAAA,IAAAG,aAAA,EAAAC,cAAA,EAAAC,cAAA,CAAA;EACjB,MAAA,IAAI,IAAI,CAACC,MAAM,KAAK,OAAO,EAAE,OAAA,CAAAH,aAAA,GAAO,IAAI,CAACb,OAAO,KAAZa,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAA,CAAc1D,UAAU,CAAA;EAC5D,MAAA,IAAI,IAAI,CAAC6D,MAAM,EAAE,OAAAF,CAAAA,cAAA,GAAO,IAAI,CAACd,OAAO,KAAZc,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAA,CAAc1D,aAAa,CAAA;QACnD,OAAA2D,CAAAA,cAAA,GAAO,IAAI,CAACf,OAAO,KAAZe,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAA,CAAc9G,KAAK,CAAA;OAC3B;EAEDwG,IAAAA,YAAYA,GAAU;EACpB,MAAA,IAAI,CAAC,IAAI,CAACT,OAAO,EAAE,OAAA;EAEnB,MAAA,MAAM/F,KAAK,GAAG,IAAI,CAACA,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC+G,MAAM,KAAK,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC/G,KAAK,CAAA;EAC7E,MAAA,IAAI,IAAI,CAAC+G,MAAM,KAAK,OAAO,EAAE,IAAI,CAAChB,OAAO,CAAC7C,UAAU,GAAGlD,KAAK,CAAC,KACxD,IAAI,IAAI,CAAC+G,MAAM,EAAE,IAAI,CAAChB,OAAO,CAAC5C,aAAa,GAAGnD,KAAe,CAAC,KAC9D,IAAI,CAAC+F,OAAO,CAAC/F,KAAK,GAAGA,KAAe,CAAA;OAC1C;EAEDgD,IAAAA,SAASA,GAAU;EACjB,MAAA,MAAMgE,GAAG,GAAG,IAAI,CAACP,UAAU,EAAE,CAAA;EAC7B,MAAA,IAAI,CAACP,KAAK,CAAC,OAAO,EAAEc,GAAG,CAAC,CAAA;EACxB,MAAA,IAAI,CAACd,KAAK,CAAC,QAAQ,EAAEc,GAAG,CAAC,CAAA;OAC1B;EAED5D,IAAAA,WAAWA,GAAU;QACnB,IAAI,CAAC8C,KAAK,CAAC,UAAU,EAAE,IAAI,CAACO,UAAU,EAAE,CAAC,CAAA;OAC1C;MAEDpD,SAASA,CAAEiD,WAAyB,EAAQ;EAC1C,MAAA,IAAI,CAACA,WAAW,EAAEA,WAAW,GAAG,IAAI,CAACA,WAAW,CAAA;EAEhD,MAAA,IAAI,CAACP,OAAO,GAAGxC,sBAAK,CAAE,IAAI,CAACX,GAAG,EAAuB0D,WAAW,CAAC,CAC9D9C,EAAE,CAAC,QAAQ,EAAE,IAAI,CAACR,SAAS,CAACiE,IAAI,CAAC,IAAI,CAAC,CAAC,CACvCzD,EAAE,CAAC,UAAU,EAAE,IAAI,CAACJ,WAAW,CAAC6D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAC9C,IAAI,CAACT,YAAY,EAAE,CAAA;OACpB;EAED/C,IAAAA,YAAYA,GAAU;QACpB,IAAI,IAAI,CAACsC,OAAO,EAAE;EAChB,QAAA,IAAI,CAACA,OAAO,CAACpC,OAAO,EAAE,CAAA;UACtB,OAAO,IAAI,CAACoC,OAAO,CAAA;EACrB,OAAA;EACF,KAAA;KACD;EAEDhE,EAAAA,KAAK,EAAE;MACL/B,KAAK,EAAE,EAAE;EACT+G,IAAAA,MAAM,EAAE;QACNhH,SAAS,EAAGC,KAAK,IAAKA,KAAK,KAAK,OAAO,IAAI,OAAOA,KAAK,KAAK,SAAA;OAC7D;MACD,GAAG+B,KAAAA;EACL,GAAA;EACF,CAAC,CAAC;;AChHF,kBAAemF,cAAM,GAAGC,UAAU,GAAGC,UAAU;;ACA/C,kBAAe;EACb3C,EAAAA,IAAI,EAAE,OAAO;IAEb,CAACyC,cAAM,GAAG,aAAa,GAAG,MAAM,GAAG,CAA0B3E,EAA8B,EAAAuC,IAAA,KAA0C;MAAA,IAAxC;EAAE9E,MAAAA,KAAK,EAAEqH,OAAAA;EAAyB,KAAC,GAAAvC,IAAA,CAAA;MAC9H,IAAI,CAACuC,OAAO,EAAE,OAAA;EAEdC,IAAAA,QAAQ,CAAC/E,EAAE,EAAE8E,OAAO,CAAC,CAAA;KACtB;IAED,CAACH,cAAM,GAAG,SAAS,GAAG,QAAQ,GAAG,CAA0B3E,EAA8B,EAAAgF,KAAA,KAA6D;MAAA,IAA3D;EAAEvH,MAAAA,KAAK,EAAEqH,OAAAA;EAA4C,KAAC,GAAAE,KAAA,CAAA;EAC/I,IAAA,IAAIF,OAAO,EAAE;QACX,IAAI9E,EAAE,CAACwD,OAAO,EAAE;EACdxD,QAAAA,EAAE,CAACwD,OAAO,CAAC/B,aAAa,CAACqD,OAA2B,CAAC,CAAA;EACrD,QAAA,IAAI9E,EAAE,CAACvC,KAAK,KAAKuC,EAAE,CAACwD,OAAO,CAAC/F,KAAK,EAAEuC,EAAE,CAACwD,OAAO,CAACyB,SAAS,EAAE,CAAA;EAC3D,OAAC,MACIF,QAAQ,CAAC/E,EAAE,EAAE8E,OAAe,CAAC,CAAA;EACpC,KAAC,MAAM;QACLI,WAAW,CAAClF,EAAE,CAAC,CAAA;EACjB,KAAA;KACD;EAED,EAAA,CAAC2E,cAAM,GAAG,WAAW,GAAG,QAAQ,GAA6B3E,EAA8B,IAAK;MAC9FkF,WAAW,CAAClF,EAAE,CAAC,CAAA;EACjB,GAAA;EACF,CAAC,CAAA;EAED,SAASmF,SAASA,CAA2BnF,EAA8B,EAAEoF,SAAiB,EAAErC,IAAqB,EAAE;EACrH,EAAA,MAAMsC,CAAC,GAAGC,QAAQ,CAACC,WAAW,CAAC,aAAa,CAAC,CAAA;IAC7CF,CAAC,CAACG,eAAe,CAACJ,SAAS,EAAE,IAAI,EAAE,IAAI,EAAErC,IAAI,CAAC,CAAA;EAC9C/C,EAAAA,EAAE,CAACyF,aAAa,CAACJ,CAAC,CAAC,CAAA;EACrB,CAAA;EAEA,SAASN,QAAQA,CAA2B/E,EAA8B,EAAE0F,IAAU,EAAE;EACtF1F,EAAAA,EAAE,CAACwD,OAAO,GAAGxC,sBAAK,CAAChB,EAAE,EAAE0F,IAAI,CAAC,CACzBzE,EAAE,CAAC,QAAQ,EAAE,MAAMkE,SAAS,CAACnF,EAAE,EAAE,QAAQ,EAAEA,EAAE,CAACwD,OAA0B,CAAC,CAAC,CAC1EvC,EAAE,CAAC,UAAU,EAAE,MAAMkE,SAAS,CAACnF,EAAE,EAAE,UAAU,EAAEA,EAAE,CAACwD,OAA0B,CAAC,CAAC,CAAA;EACnF,CAAA;EAEA,SAAS0B,WAAWA,CAA2BlF,EAA8B,EAAE;IAC7E,IAAIA,EAAE,CAACwD,OAAO,EAAE;EACdxD,IAAAA,EAAE,CAACwD,OAAO,CAACpC,OAAO,EAAE,CAAA;MACpB,OAAOpB,EAAE,CAACwD,OAAO,CAAA;EACnB,GAAA;EACF;;;;;;;;;;;;;;;"}